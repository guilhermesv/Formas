<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ndbx formatVersion="21" type="file" uuid="015bee5f-0b65-492e-be6c-dfad71873adc">
    <property name="canvasHeight" value="1080"/>
    <property name="canvasWidth" value="1920"/>
    <property name="canvasX" value="-0"/>
    <property name="canvasY" value="0"/>
    <node name="root" prototype="core.network" renderedChild="combine3">
        <node name="align1" position="-4.00,7.00" prototype="corevector.align"/>
        <node name="color5" position="18.00,3.00" prototype="color.color"/>
        <node name="color6" position="21.00,3.00" prototype="color.color"/>
        <node name="color7" position="12.00,3.00" prototype="color.color"/>
        <node name="color8" position="15.00,3.00" prototype="color.color"/>
        <node name="colorize1" position="-4.00,13.00" prototype="corevector.colorize"/>
        <node name="colorize2" position="1.00,13.00" prototype="corevector.colorize"/>
        <node name="colorize3" position="-9.00,19.00" prototype="corevector.colorize"/>
        <node name="colunas" position="1.00,-1.00" prototype="math.integer">
            <port name="value" type="int" value="2"/>
        </node>
        <node name="combine1" position="-4.00,22.00" prototype="list.combine"/>
        <node name="combine2" position="12.00,5.00" prototype="list.combine"/>
        <node name="combine3" position="-5.00,25.00" prototype="list.combine"/>
        <node name="connect1" position="-4.00,3.00" prototype="corevector.connect"/>
        <node name="cull5" position="12.00,1.00" prototype="list.cull"/>
        <node name="cull6" position="18.00,1.00" prototype="list.cull"/>
        <node name="cull7" position="15.00,1.00" prototype="list.cull"/>
        <node name="cull8" position="21.00,1.00" prototype="list.cull"/>
        <node name="divide1" position="1.00,2.00" prototype="math.divide">
            <port name="value1" type="float" value="1920.0"/>
        </node>
        <node name="divide2" position="7.00,2.00" prototype="math.divide">
            <port name="value1" type="float" value="1080.0"/>
        </node>
        <node name="equals5" position="21.00,-1.00" prototype="string.equals"/>
        <node name="equals6" position="18.00,-1.00" prototype="string.equals"/>
        <node name="equals7" position="15.00,-1.00" prototype="string.equals"/>
        <node name="equals8" position="12.00,-1.00" prototype="string.equals"/>
        <node name="fit1" position="-4.00,6.00" prototype="corevector.fit">
            <port name="width" type="float" value="1920.0"/>
            <port name="height" type="float" value="1080.0"/>
            <port name="keep_proportions" type="boolean" value="false"/>
        </node>
        <node name="frame1" position="6.00,13.00" prototype="core.frame"/>
        <node name="grid1" position="3.00,6.00" prototype="corevector.grid">
            <port name="columns" type="int" value="2"/>
            <port name="rows" type="int" value="2"/>
            <port name="width" type="float" value="1920.0"/>
            <port name="height" type="float" value="1080.0"/>
        </node>
        <node name="group1" position="1.00,14.00" prototype="corevector.group"/>
        <node name="group2" position="-4.00,14.00" prototype="corevector.group"/>
        <node name="import_svg2" position="12.00,-6.00" prototype="corevector.import_svg">
            <port name="file" type="string" value="paleta.svg"/>
        </node>
        <node name="linhas" position="7.00,-1.00" prototype="math.integer">
            <port name="value" type="int" value="1"/>
        </node>
        <node name="logical5" position="21.00,0.00" prototype="math.logical">
            <port name="boolean2" type="boolean" value="true"/>
            <port name="comparator" type="string" value="xor"/>
        </node>
        <node name="logical6" position="18.00,0.00" prototype="math.logical">
            <port name="boolean2" type="boolean" value="true"/>
            <port name="comparator" type="string" value="xor"/>
        </node>
        <node name="logical7" position="15.00,0.00" prototype="math.logical">
            <port name="boolean2" type="boolean" value="true"/>
            <port name="comparator" type="string" value="xor"/>
        </node>
        <node name="logical8" position="12.00,0.00" prototype="math.logical">
            <port name="boolean2" type="boolean" value="true"/>
            <port name="comparator" type="string" value="xor"/>
        </node>
        <node name="lookup2" position="12.00,-4.00" prototype="data.lookup">
            <port name="key" type="string" value="fill"/>
        </node>
        <node name="make_point1" position="6.00,15.00" prototype="corevector.make_point"/>
        <node name="make_point2" position="9.00,15.00" prototype="corevector.make_point"/>
        <node name="pick5" position="21.00,-2.00" prototype="list.pick">
            <port name="amount" type="int" value="1"/>
            <port name="seed" type="int" value="7"/>
        </node>
        <node name="pick6" position="18.00,-2.00" prototype="list.pick">
            <port name="amount" type="int" value="1"/>
            <port name="seed" type="int" value="7"/>
        </node>
        <node name="pick7" position="15.00,-2.00" prototype="list.pick">
            <port name="amount" type="int" value="1"/>
            <port name="seed" type="int" value="9"/>
        </node>
        <node name="pick8" position="12.00,-2.00" prototype="list.pick">
            <port name="amount" type="int" value="1"/>
        </node>
        <node name="point1" position="-4.00,1.00" prototype="corevector.point"/>
        <node name="random_numbers2" position="16.00,-6.00" prototype="math.random_numbers">
            <port name="amount" type="int" value="4"/>
            <port name="seed" type="int" value="86"/>
        </node>
        <node name="rect1" position="-4.00,0.00" prototype="corevector.rect">
            <port name="width" type="float" value="200.0"/>
            <port name="height" type="float" value="200.0"/>
        </node>
        <node name="rect2" position="-9.00,18.00" prototype="corevector.rect">
            <port name="width" type="float" value="1920.0"/>
            <port name="height" type="float" value="1080.0"/>
        </node>
        <node name="rotate1" position="1.00,12.00" prototype="corevector.rotate">
            <port name="angle" type="float" value="180.0"/>
        </node>
        <node name="slice1" position="-4.00,2.00" prototype="list.slice">
            <port name="size" type="int" value="3"/>
        </node>
        <node name="slice5" position="15.00,-3.00" prototype="list.slice">
            <port name="start_index" type="int" value="1"/>
            <port name="size" type="int" value="1"/>
        </node>
        <node name="slice6" position="18.00,-3.00" prototype="list.slice">
            <port name="start_index" type="int" value="2"/>
            <port name="size" type="int" value="1"/>
        </node>
        <node name="slice7" position="21.00,-3.00" prototype="list.slice">
            <port name="start_index" type="int" value="3"/>
            <port name="size" type="int" value="1"/>
        </node>
        <node name="slice8" position="12.00,-3.00" prototype="list.slice">
            <port name="size" type="int" value="1"/>
        </node>
        <node name="subtract1" position="1.00,4.00" prototype="math.subtract">
            <port name="value1" type="float" value="1920.0"/>
        </node>
        <node name="subtract2" position="7.00,4.00" prototype="math.subtract">
            <port name="value1" type="float" value="1080.0"/>
        </node>
        <node name="translate1" position="-4.00,11.00" prototype="corevector.translate"/>
        <node name="translate2" position="1.00,16.00" prototype="corevector.translate">
            <port name="translate" type="point" value="0.00,545.00"/>
        </node>
        <node name="translate3" position="-4.00,16.00" prototype="corevector.translate">
            <port name="translate" type="point" value="0.00,-529.00"/>
        </node>
        <node name="ungroup2" position="12.00,-5.00" prototype="corevector.ungroup"/>
        <node name="wave1" position="6.00,14.00" prototype="math.wave">
            <port name="min" type="float" value="-540.0"/>
            <port name="max" type="float" value="0.0"/>
            <port name="period" type="float" value="50.0"/>
        </node>
        <node name="wave2" position="9.00,14.00" prototype="math.wave">
            <port name="min" type="float" value="540.0"/>
            <port name="max" type="float" value="0.0"/>
            <port name="period" type="float" value="50.0"/>
        </node>
        <conn input="ungroup2.shape" output="import_svg2"/>
        <conn input="lookup2.list" output="ungroup2"/>
        <conn input="pick8.list" output="lookup2"/>
        <conn input="equals8.string" output="lookup2"/>
        <conn input="equals8.equals" output="pick8"/>
        <conn input="cull5.list" output="lookup2"/>
        <conn input="logical8.boolean1" output="equals8"/>
        <conn input="cull5.booleans" output="logical8"/>
        <conn input="equals7.equals" output="pick7"/>
        <conn input="logical7.boolean1" output="equals7"/>
        <conn input="pick7.list" output="cull5"/>
        <conn input="equals7.string" output="cull5"/>
        <conn input="cull7.list" output="cull5"/>
        <conn input="cull7.booleans" output="logical7"/>
        <conn input="equals6.equals" output="pick6"/>
        <conn input="logical6.boolean1" output="equals6"/>
        <conn input="cull6.booleans" output="logical6"/>
        <conn input="equals6.string" output="cull7"/>
        <conn input="cull6.list" output="cull7"/>
        <conn input="pick6.list" output="cull7"/>
        <conn input="equals5.equals" output="pick5"/>
        <conn input="logical5.boolean1" output="equals5"/>
        <conn input="cull8.booleans" output="logical5"/>
        <conn input="pick5.list" output="cull6"/>
        <conn input="equals5.string" output="cull6"/>
        <conn input="cull8.list" output="cull6"/>
        <conn input="slice8.list" output="random_numbers2"/>
        <conn input="pick8.seed" output="slice8"/>
        <conn input="slice5.list" output="random_numbers2"/>
        <conn input="pick7.seed" output="slice5"/>
        <conn input="slice6.list" output="random_numbers2"/>
        <conn input="pick6.seed" output="slice6"/>
        <conn input="slice7.list" output="random_numbers2"/>
        <conn input="pick5.seed" output="slice7"/>
        <conn input="color7.color" output="pick8"/>
        <conn input="color8.color" output="pick7"/>
        <conn input="color5.color" output="pick6"/>
        <conn input="color6.color" output="pick5"/>
        <conn input="point1.value" output="rect1"/>
        <conn input="slice1.list" output="point1"/>
        <conn input="connect1.points" output="slice1"/>
        <conn input="fit1.shape" output="connect1"/>
        <conn input="align1.shape" output="fit1"/>
        <conn input="translate1.shape" output="align1"/>
        <conn input="translate1.translate" output="grid1"/>
        <conn input="divide1.value2" output="colunas"/>
        <conn input="fit1.width" output="divide1"/>
        <conn input="fit1.height" output="divide2"/>
        <conn input="divide2.value2" output="linhas"/>
        <conn input="grid1.rows" output="linhas"/>
        <conn input="subtract1.value2" output="divide1"/>
        <conn input="subtract2.value2" output="divide2"/>
        <conn input="grid1.height" output="subtract2"/>
        <conn input="grid1.width" output="subtract1"/>
        <conn input="colorize1.shape" output="translate1"/>
        <conn input="rotate1.shape" output="translate1"/>
        <conn input="colorize2.shape" output="rotate1"/>
        <conn input="combine2.list1" output="color7"/>
        <conn input="combine2.list2" output="color8"/>
        <conn input="combine2.list3" output="color5"/>
        <conn input="colorize1.fill" output="combine2"/>
        <conn input="colorize2.fill" output="combine2"/>
        <conn input="grid1.columns" output="colunas"/>
        <conn input="group1.shapes" output="colorize2"/>
        <conn input="group2.shapes" output="colorize1"/>
        <conn input="translate2.shape" output="group1"/>
        <conn input="combine1.list2" output="translate2"/>
        <conn input="colorize3.fill" output="color6"/>
        <conn input="colorize3.shape" output="rect2"/>
        <conn input="combine3.list1" output="colorize3"/>
        <conn input="combine3.list2" output="combine1"/>
        <conn input="translate3.shape" output="group2"/>
        <conn input="combine1.list1" output="translate3"/>
        <conn input="make_point1.y" output="wave1"/>
        <conn input="wave1.offset" output="frame1"/>
        <conn input="translate3.translate" output="make_point1"/>
        <conn input="make_point2.y" output="wave2"/>
        <conn input="wave2.offset" output="frame1"/>
        <conn input="translate2.translate" output="make_point2"/>
    </node>
</ndbx>
